{
  "name": "简化版本-20个临床试验结果收集",
  "nodes": [
    {
      "parameters": {},
      "name": "手动触发收集",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "requestMethod": "GET",
        "url": "https://clinicaltrials.gov/api/query/study_fields",
        "options": {},
        "queryParametersUi": {
          "parameter": [
            {
              "name": "expr",
              "value": "AREA[StudyType]EXACT[\"Interventional\"] AND AREA[Phase]PHASE3 AND AREA[OverallStatus]EXACT[\"Completed\"] AND AREA[HasResults]EXACT[\"true\"]"
            },
            {
              "name": "fields", 
              "value": "NCTId,BriefTitle,Condition,InterventionName,PrimaryOutcomeMeasure,SecondaryOutcomeMeasure,CompletionDate,EnrollmentCount,HasResults,ResultsFirstPostDate"
            },
            {
              "name": "min_rnk",
              "value": "1"
            },
            {
              "name": "max_rnk", 
              "value": "50"
            },
            {
              "name": "fmt",
              "value": "json"
            }
          ]
        }
      },
      "name": "搜索已完成试验",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "functionCode": "// 筛选和清理已完成的临床试验数据\nconst items = $input.all();\nconst processedData = [];\n\nfor (const item of items) {\n  const studies = item.json.StudyFieldsResponse?.StudyFields || [];\n  \n  for (const study of studies) {\n    // 只保留有结果的已完成试验\n    if (study.HasResults && study.HasResults[0] === 'true') {\n      const processedStudy = {\n        nctId: study.NCTId?.[0] || '',\n        title: study.BriefTitle?.[0] || '',\n        condition: study.Condition?.join('; ') || '',\n        intervention: study.InterventionName?.join('; ') || '',\n        primaryOutcome: study.PrimaryOutcomeMeasure?.[0] || '',\n        secondaryOutcome: study.SecondaryOutcomeMeasure?.join('; ') || '',\n        completionDate: study.CompletionDate?.[0] || '',\n        enrollmentCount: parseInt(study.EnrollmentCount?.[0]) || 0,\n        resultsPostedDate: study.ResultsFirstPostDate?.[0] || '',\n        // 生成结果页面链接\n        resultsUrl: `https://clinicaltrials.gov/study/${study.NCTId?.[0]}/results`,\n        // 数据质量评分\n        qualityScore: {\n          hasResults: !!study.HasResults?.[0],\n          hasPrimary: !!study.PrimaryOutcomeMeasure?.[0],\n          hasEnrollment: !!study.EnrollmentCount?.[0],\n          isLargeTrial: parseInt(study.EnrollmentCount?.[0] || 0) > 100\n        }\n      };\n      \n      processedData.push({ json: processedStudy });\n    }\n  }\n}\n\n// 按入组人数排序，优先选择大样本试验\nprocessedData.sort((a, b) => b.json.enrollmentCount - a.json.enrollmentCount);\n\n// 只取前20个\nconst top20 = processedData.slice(0, 20);\n\n// 输出收集摘要\nconsole.log(`✅ 成功收集 ${top20.length} 个临床试验数据`);\nfor (let i = 0; i < Math.min(5, top20.length); i++) {\n  const trial = top20[i].json;\n  console.log(`${i+1}. ${trial.nctId}: ${trial.title} (${trial.enrollmentCount}人)`);\n}\n\nreturn top20;"
      },
      "name": "筛选前20个优质试验",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [680, 300]
    },
    {
      "parameters": {
        "requestMethod": "GET",
        "url": "https://clinicaltrials.gov/api/query/full_studies",
        "options": {},
        "queryParametersUi": {
          "parameter": [
            {
              "name": "expr",
              "value": "AREA[NCTId]={{$json.nctId}}"
            },
            {
              "name": "fmt",
              "value": "json"
            }
          ]
        }
      },
      "name": "获取详细结果数据",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [900, 300]
    },
    {
      "parameters": {
        "functionCode": "// 提取详细的结果数据并输出到控制台\nconst items = $input.all();\nconst detailedResults = [];\n\nfor (const item of items) {\n  const study = item.json.FullStudiesResponse?.FullStudies?.[0]?.Study;\n  \n  if (study) {\n    const resultsSection = study.ResultsSection;\n    const protocolSection = study.ProtocolSection;\n    \n    const detailedResult = {\n      // 基本信息\n      nctId: protocolSection?.IdentificationModule?.NCTId || '',\n      title: protocolSection?.IdentificationModule?.BriefTitle || '',\n      \n      // 研究设计\n      studyType: protocolSection?.DesignModule?.StudyType || '',\n      phase: protocolSection?.DesignModule?.PhaseList?.Phase?.join(', ') || '',\n      allocation: protocolSection?.DesignModule?.DesignInfo?.DesignAllocation || '',\n      masking: protocolSection?.DesignModule?.DesignInfo?.DesignMasking || '',\n      \n      // 参与者信息\n      enrollmentCount: protocolSection?.DesignModule?.EnrollmentInfo?.EnrollmentCount || 0,\n      eligibilityCriteria: protocolSection?.EligibilityModule?.EligibilityCriteria || '',\n      \n      // 干预措施\n      interventions: protocolSection?.ArmsInterventionsModule?.InterventionList?.Intervention?.map(i => ({\n        type: i.InterventionType,\n        name: i.InterventionName,\n        description: i.InterventionDescription\n      })) || [],\n      \n      // 主要结果\n      primaryOutcomes: protocolSection?.OutcomesModule?.PrimaryOutcomeList?.PrimaryOutcome?.map(o => ({\n        measure: o.PrimaryOutcomeMeasure,\n        timeFrame: o.PrimaryOutcomeTimeFrame,\n        description: o.PrimaryOutcomeDescription\n      })) || [],\n      \n      // 结果数据 (这是关键部分)\n      results: {\n        participantFlow: resultsSection?.ParticipantFlowModule,\n        baselineCharacteristics: resultsSection?.BaselineCharacteristicsModule,\n        outcomeData: resultsSection?.OutcomeMeasuresModule?.OutcomeMeasureList?.OutcomeMeasure?.map(outcome => ({\n          title: outcome.OutcomeMeasureTitle,\n          description: outcome.OutcomeMeasureDescription,\n          timeFrame: outcome.OutcomeMeasureTimeFrame,\n          type: outcome.OutcomeMeasureType,\n          // 具体数值结果\n          results: outcome.OutcomeMeasureAnalysisList?.OutcomeMeasureAnalysis?.map(analysis => ({\n            groupDescription: analysis.OutcomeMeasureAnalysisGroupDescription,\n            statisticalMethod: analysis.OutcomeMeasureAnalysisStatisticalMethod,\n            pValue: analysis.OutcomeMeasureAnalysisPValue,\n            statisticalComment: analysis.OutcomeMeasureAnalysisStatisticalComment\n          })) || []\n        })) || [],\n        adverseEvents: resultsSection?.AdverseEventsModule\n      },\n      \n      // 元数据\n      lastUpdateDate: protocolSection?.StatusModule?.LastUpdatePostDate,\n      resultsFirstPosted: protocolSection?.StatusModule?.ResultsFirstPostDate,\n      collectedAt: new Date().toISOString()\n    };\n    \n    // 输出关键结果到控制台\n    console.log(`\\n📊 ${detailedResult.nctId}: ${detailedResult.title}`);\n    console.log(`🔬 研究类型: ${detailedResult.studyType}, 分期: ${detailedResult.phase}`);\n    console.log(`👥 入组人数: ${detailedResult.enrollmentCount}`);\n    console.log(`💊 干预措施: ${detailedResult.interventions.map(i => i.name).join(', ')}`);\n    console.log(`🎯 主要终点: ${detailedResult.primaryOutcomes.map(o => o.measure).join(', ')}`);\n    console.log(`📈 结果数据: ${detailedResult.results.outcomeData?.length || 0} 个结果指标`);\n    \n    detailedResults.push({ json: detailedResult });\n  }\n}\n\nconsole.log(`\\n🎉 数据收集完成！共收集 ${detailedResults.length} 个详细试验结果`);\nconsole.log(`📊 数据包含: 基本信息、研究设计、干预措施、主要终点、结果数据`);\nconsole.log(`🔗 下一步: 使用LangChain构建解析pipeline提取疗效数据`);\n\nreturn detailedResults;"
      },
      "name": "提取并显示结果数据",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1120, 300]
    }
  ],
  "connections": {
    "手动触发收集": {
      "main": [
        [
          {
            "node": "搜索已完成试验",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "搜索已完成试验": {
      "main": [
        [
          {
            "node": "筛选前20个优质试验",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "筛选前20个优质试验": {
      "main": [
        [
          {
            "node": "获取详细结果数据",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "获取详细结果数据": {
      "main": [
        [
          {
            "node": "提取并显示结果数据",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {},
  "id": "simple-trial-collector"
} 