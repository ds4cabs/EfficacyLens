{
  "name": "临床试验收集器 v2 (新API)",
  "nodes": [
    {
      "parameters": {},
      "name": "手动触发收集",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "requestMethod": "GET",
        "url": "https://clinicaltrials.gov/api/v2/studies",
        "options": {},
        "queryParametersUi": {
          "parameter": [
            {
              "name": "format",
              "value": "json"
            },
            {
              "name": "pageSize",
              "value": "20"
            }
          ]
        }
      },
      "name": "搜索已完成试验 (API v2)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "functionCode": "// 处理和清理v2 API返回的临床试验数据\nconst items = $input.all();\nconst processedData = [];\n\nfor (const item of items) {\n  const studies = item.json.studies || [];\n  console.log(`📊 API v2返回: ${studies.length} 个试验`);\n  \n  for (const study of studies.slice(0, 20)) {\n    const protocol = study.protocolSection || {};\n    const identification = protocol.identificationModule || {};\n    const status = protocol.statusModule || {};\n    const design = protocol.designModule || {};\n    const outcomes = protocol.outcomesModule || {};\n    const eligibility = protocol.eligibilityModule || {};\n    const results = study.resultsSection || {};\n    \n    const processedStudy = {\n      nctId: identification.nctId || '',\n      title: identification.briefTitle || '',\n      officialTitle: identification.officialTitle || '',\n      condition: protocol.conditionsModule?.conditions?.join('; ') || '',\n      intervention: protocol.armsInterventionsModule?.interventions?.map(i => i.name).join('; ') || '',\n      primaryOutcome: outcomes.primaryOutcomes?.map(o => o.measure).join('; ') || '',\n      secondaryOutcome: outcomes.secondaryOutcomes?.map(o => o.measure).join('; ') || '',\n      completionDate: status.completionDateStruct?.date || '',\n      enrollmentCount: design.enrollmentInfo?.count || 0,\n      studyType: design.studyType || '',\n      phase: design.phases?.join(', ') || '',\n      overallStatus: status.overallStatus || '',\n      hasResults: !!results.participantFlowModule,\n      resultsUrl: `https://clinicaltrials.gov/study/${identification.nctId}`,\n      collectedAt: new Date().toISOString(),\n      // 原始数据（用于调试）\n      _rawData: {\n        protocol: !!protocol,\n        identification: !!identification,\n        status: !!status,\n        design: !!design,\n        results: !!results\n      }\n    };\n    \n    console.log(`✅ 处理试验: ${processedStudy.nctId} - ${processedStudy.title.substring(0, 50)}...`);\n    console.log(`   📈 状态: ${processedStudy.overallStatus}, 分期: ${processedStudy.phase}`);\n    console.log(`   👥 入组人数: ${processedStudy.enrollmentCount}`);\n    console.log(`   🔬 有结果数据: ${processedStudy.hasResults ? '是' : '否'}`);\n    \n    processedData.push({ json: processedStudy });\n  }\n}\n\nconsole.log(`\\n🎉 数据处理完成！`);\nconsole.log(`📊 总共处理: ${processedData.length} 个试验`);\nif (processedData.length > 0) {\n  console.log(`🏆 示例试验: ${processedData[0]?.json.nctId} - ${processedData[0]?.json.title}`);\n  console.log(`🔬 有结果数据的试验: ${processedData.filter(t => t.json.hasResults).length} 个`);\n}\n\nreturn processedData;"
      },
      "name": "处理试验数据",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [680, 300]
    },
    {
      "parameters": {
        "functionCode": "// 显示收集到的试验数据摘要\nconst items = $input.all();\n\nif (items.length === 0) {\n  console.log('❌ 没有收集到任何数据');\n  return items;\n}\n\nconsole.log('\\n' + '='.repeat(80));\nconsole.log('🎯 临床试验数据收集完成！');\nconsole.log('='.repeat(80));\n\nconsole.log(`\\n📋 总试验数: ${items.length}`);\n\nconst withResults = items.filter(item => item.json.hasResults);\nconsole.log(`🔬 有结果数据: ${withResults.length} 个`);\n\nconst avgEnrollment = items.reduce((sum, item) => sum + item.json.enrollmentCount, 0) / items.length;\nconsole.log(`👥 平均入组人数: ${Math.round(avgEnrollment)} 人`);\n\nconst phases = [...new Set(items.map(item => item.json.phase).filter(p => p))];\nconsole.log(`🧪 试验分期: ${phases.join(', ')}`);\n\nconsole.log(`\\n🏆 前5个大样本试验:`);\nfor (let i = 0; i < Math.min(5, items.length); i++) {\n  const trial = items[i].json;\n  console.log(`  ${i+1}. ${trial.nctId}: ${trial.title.substring(0, 60)}...`);\n  console.log(`     👥 ${trial.enrollmentCount} 人 | 📊 ${trial.phase} | 🔬 ${trial.hasResults ? '有结果' : '无结果'}`);\n  console.log(`     🎯 ${trial.primaryOutcome.substring(0, 80)}...`);\n  console.log('');\n}\n\nconsole.log('\\n🎯 下一步建议:');\nconsole.log('1. 🔍 进一步分析有结果数据的试验');\nconsole.log('2. 📊 构建LangChain解析pipeline');\nconsole.log('3. 🤖 开发AI疗效比较功能');\n\nconsole.log('\\n' + '='.repeat(80));\n\nreturn items;"
      },
      "name": "显示收集摘要",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [900, 300]
    }
  ],
  "connections": {
    "手动触发收集": {
      "main": [
        [
          {
            "node": "搜索已完成试验 (API v2)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "搜索已完成试验 (API v2)": {
      "main": [
        [
          {
            "node": "处理试验数据",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "处理试验数据": {
      "main": [
        [
          {
            "node": "显示收集摘要",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {},
  "id": "clinical-trials-collector-v2"
} 